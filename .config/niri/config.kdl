debug {
    // preview-render "screencast"
    // preview-render "screen-capture"
    // dbus-interfaces-in-non-session-instances
    // wait-for-frame-completion-before-queueing
    // enable-overlay-planes
    // disable-cursor-plane
    // disable-direct-scanout
    // render-drm-device "/dev/dri/renderD129"
    // render-drm-device "/dev/dri/card1"
    // enable-color-transformations-capability
    // emulate-zero-presentation-time
    honor-xdg-activation-with-invalid-serial
}

input {
    keyboard {
        xkb {
            layout "de"
        }

        repeat-delay 250
        repeat-rate 40
    }

    touchpad {
        tap
        natural-scroll
        accel-speed 0.4
        scroll-factor 0.2
        accel-profile "flat"
    }

    mouse {
        accel-speed 0.4
        accel-profile "flat"
    }

    focus-follows-mouse max-scroll-amount="30%"
}

output "eDP-1" {
    // off

    scale 1.0
    // transform "90"
    position x=0 y=0
    mode "1920x1080"
}

output "DP-1" {
    // off

    focus-at-startup
    scale 1.0
    position x=1920 y=-400
    mode "3440x1440"
}

layout {
    focus-ring {
        off
        width 2

        active-color "#74c7ec"
        inactive-color "#585b70"
    }

    border {
        // off
        width 2

        // active-color "#89dceb"
        // inactive-color "#585b70"

        active-gradient from="#89dceb" to="#a6e3a1" angle=45
        inactive-gradient from="#585b70" to="#7f849c" angle=45
    }

    preset-column-widths {
        proportion 0.3333333333333333
        proportion 0.5
        proportion 0.6666666666666667
        // fixed 1000
    }

    default-column-width { proportion 0.5; }

    gaps 4

    struts {
        left -2
        right -2
    }

    tab-indicator {
        width 6
        gap 0
        // length total-proportion=1.0
        position "top"
        gaps-between-tabs 4
        corner-radius 4
        // place-within-column
    }

    // center-focused-column "on-overflow"
    // center-focused-column "always"
}

cursor {
    xcursor-theme "catppuccin-mocha-dark-cursors"
    xcursor-size 36
}

prefer-no-csd

spawn-at-startup "/usr/lib/pam_kwallet_init"
spawn-at-startup "safeeyes"
spawn-at-startup "nm-applet"
spawn-at-startup "xwayland-satellite"
spawn-at-startup "gammastep-indicator"
spawn-at-startup "swayidle" "-w" "timeout" "601" "niri msg action power-off-monitors" "timeout" "600" "swaylock -f" "before-sleep" "swaylock -f"

environment {
    DISPLAY ":0"
    ELECTRON_OZONE_PLATFORM_HINT "wayland"
}

// screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

hotkey-overlay {
    skip-at-startup
}

gestures {
    hot-corners {
        off
    }
}

animations {
    // off
    // slowdown 10.0
    // slowdown 4.0
    // slowdown 2.0
    // slowdown 1.5

    workspace-switch {
        // off
        // duration-ms 2500
        // curve "ease-out-cubic"
        spring damping-ratio=0.8 stiffness=800 epsilon=0.0001
    }

    window-open {
        // off
        // duration-ms 2500
        // curve "ease-out-expo"
        // spring damping-ratio=0.8 stiffness=1000 epsilon=0.0001
    }

    window-close {
        // off
        // duration-ms 2500
        // curve "ease-out-cubic"
        // spring damping-ratio=0.8 stiffness=1000 epsilon=0.0001
    }

    horizontal-view-movement {
        // off
        // duration-ms 500
        // curve "ease-out-cubic"
        spring damping-ratio=0.9 stiffness=800 epsilon=0.0001
    }

    window-movement {
        // off
        // duration-ms 750
        // curve "ease-out-cubic"
        // spring damping-ratio=1.0 stiffness=20 epsilon=0.00001
        // spring damping-ratio=0.2 stiffness=800 epsilon=0.0001
    }

    window-resize {
        // off
        // duration-ms 500
        // duration-ms 2500
        // curve "ease-out-cubic"
        // spring damping-ratio=0.2 stiffness=800 epsilon=0.0001

        custom-shader r"
            vec4 resize_color(vec3 coords_curr_geo, vec3 size_curr_geo) {
                vec3 coords_next_geo = niri_curr_geo_to_next_geo * coords_curr_geo;
                vec3 coords_prev_geo = niri_curr_geo_to_prev_geo * coords_curr_geo;

                vec3 coords_crop = niri_geo_to_tex_next * coords_next_geo;
                vec3 coords_stretch = niri_geo_to_tex_next * coords_curr_geo;
                vec3 coords_stretch_prev = niri_geo_to_tex_prev * coords_curr_geo;

                // We can crop if the current window size is smaller than the next window
                // size. One way to tell is by comparing to 1.0 the X and Y scaling
                // coefficients in the current-to-next transformation matrix.
                bool can_crop_by_x = niri_curr_geo_to_next_geo[0][0] <= 1.0;
                bool can_crop_by_y = niri_curr_geo_to_next_geo[1][1] <= 1.0;
                bool crop = can_crop_by_x && can_crop_by_y;

                vec4 color;

                if (crop) {
                    // However, when we crop, we also want to crop out anything outside the
                    // current geometry. This is because the area of the shader is unspecified
                    // and usually bigger than the current geometry, so if we don't fill pixels
                    // outside with transparency, the texture will leak out.
                    //
                    // When stretching, this is not an issue because the area outside will
                    // correspond to client-side decoration shadows, which are already supposed
                    // to be outside.
                    if (coords_curr_geo.x < 0.0 || 1.0 < coords_curr_geo.x ||
                            coords_curr_geo.y < 0.0 || 1.0 < coords_curr_geo.y) {
                        color = vec4(0.0);
                    } else {
                        color = texture2D(niri_tex_next, coords_crop.st);
                    }
                } else {
                    // If we can't crop, then crossfade.
                    color = texture2D(niri_tex_next, coords_stretch.st);
                    vec4 color_prev = texture2D(niri_tex_prev, coords_stretch_prev.st);
                    color = mix(color_prev, color, niri_clamped_progress);
                }

                return color;
            }
        "
    }

    config-notification-open-close {
        // off
        // duration-ms 250
        // curve "ease-out-cubic"
        // spring damping-ratio=0.1 stiffness=1000 epsilon=0.001
    }
}

window-rule {
    // match app-id="Alacritty"
    // match app-id="Adwaita"
    // opacity 0.9
    // opacity 0.5
    // opacity 0.98

    // open-on-output "eDP-1"
    // default-column-width { proportion 0.5; }
    // default-column-width { fixed 400; }
    // default-column-width {}
    // open-maximized true
    // open-fullscreen true
    // block-out-from "screencast"

    // min-width 400
    // max-width 400
    // min-height 400
    // max-height 400

    focus-ring {
        // on
        // active-gradient from="red" to="green"
        // active-color "lightgreen"
        // width 1
    }

    border {
        // off
        // on
        // width 12
        // width 0
        // active-color "#ff808080"
        // active-color "red"
    }

    shadow {
        on
        color "#89dceb30"
        // active-gradient from="#89dceb" to="#a6e3a1" angle=45 relative-to="workspace-view"
    }

    // draw-border-with-background true
    // draw-border-with-background false

    // geometry-corner-radius 12 24 32 64
    // geometry-corner-radius 999
    // geometry-corner-radius 1
    geometry-corner-radius 6
    clip-to-geometry true
}

layer-rule {
    match namespace="rofi"
    match namespace="dunst"

    shadow {
        on
        color "#89dceb50"
    }

    geometry-corner-radius 11

}

window-rule {
    match title="simple-egl"
    // min-width 128
    // max-width 128
    // min-height 128
    // max-height 128
    // match is-focused=true
    // match is-active=false
    // opacity 0.9
    // block-out-from "screencast"
    // block-out-from "screen-capture"
    // min-width 1000
    draw-border-with-background false
    // match app-id="mpv"
    // open-on-output "HDMI-A-1"
    // open-maximized true
    // default-column-width { proportion 0.5; }
    // open-fullscreen false
}

window-rule {
    match app-id="flameshot" title="flameshot"
    match app-id="thunar" title="Rename"
    open-floating true
    // open-fullscreen false
}

// Qt used by OBS doesn't signal min size yet, so do it manually.
window-rule {
    match app-id=r#"^com\.obsproject\.Studio$"#
    min-width 876
}

window-rule {
    match app-id="obsidian"
    open-maximized true
}

window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id="chromium$" title="DevTools$"
    match app-id="firefox" title="Developer Tools$"

    default-column-width { proportion 0.3333333333333333; }
}

window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    match app-id=r#"^org\.telegram\.desktop$"#

    // Doesn't quite work: Firefox changes the title one frame early.
    match app-id=r#"^org\.mozilla\.firefox$"# title="- Gmail "
    match app-id=r#"^org\.mozilla\.firefox$"# title="^Google Calendar "


    block-out-from "screencast"

    border {
        active-color "#f38ba8"
    }

    shadow {
        on
        color "#f38ba840"
    }
}

binds {
    Mod+Shift+C { spawn "sh" "-c" "t env DISPLAY=:0 xsel -ob | wl-copy"; }
    Mod+Shift+V { spawn "sh" "-c" "wl-paste -n | t env DISPLAY=:0 xsel -ib"; }

    Mod+Q repeat=false          { spawn "chromium"; }
    Mod+Shift+Q repeat=false    { spawn "firefox"; }
    Mod+Return repeat=false     { spawn "kitty"; }
    Mod+Alt+S                   { screenshot; }

    Print { spawn "script" "--command" "XDG_CURRENT_DESKTOP=sway flameshot gui" "/dev/null"; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }
    Mod+D { spawn "rofi" "-show" "drun"; }
    Mod+Shift+Return { spawn "thunar"; }
    Super+L allow-when-locked=true { spawn "swaylock"; }
    Super+Shift+L { power-off-monitors; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
    XF86AudioPlay        allow-when-locked=true { spawn "playerctl" "play-pause"; }
    Mod+U                allow-when-locked=true { spawn "playerctl" "play-pause"; }
    XF86AudioPrev        allow-when-locked=true { spawn "playerctl" "previous"; }
    XF86AudioNext        allow-when-locked=true { spawn "playerctl" "next"; }

    Mod+W repeat=false { close-window; }
    Mod+A repeat=false { toggle-overview; }
    Mod+Y repeat=false { toggle-column-tabbed-display; }

    Alt+Tab         { focus-window-up-or-bottom; }
    Alt+Shift+Tab   { focus-window-up; }

    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }

    Mod+Shift+Left  { move-column-left; }
    Mod+Shift+Down  { move-window-down; }
    Mod+Shift+Up    { move-window-up; }
    Mod+Shift+Right { move-column-right; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Shift+Home { move-column-to-first; }
    Mod+Shift+End  { move-column-to-last; }

    Mod+Ctrl+Left  { focus-monitor-left; }
    Mod+Ctrl+Down  { focus-monitor-down; }
    Mod+Ctrl+Up    { focus-monitor-up; }
    Mod+Ctrl+Right { focus-monitor-right; }

    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }

    Mod+Shift+Alt+Left  { move-workspace-to-monitor-left; }
    Mod+Shift+Alt+Down  { move-workspace-to-monitor-down; }
    Mod+Shift+Alt+Up    { move-workspace-to-monitor-up; }
    Mod+Shift+Alt+Right { move-workspace-to-monitor-right; }

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+Shift+Page_Down { move-column-to-workspace-down; }
    Mod+Shift+Page_Up   { move-column-to-workspace-up; }

    Mod+Shift+WheelScrollUp     cooldown-ms=150 { focus-workspace-up; }
    Mod+Shift+WheelScrollDown   cooldown-ms=150 { focus-workspace-down; }

    Mod+WheelScrollRight           { focus-column-right; }
    Mod+WheelScrollLeft            { focus-column-left; }
    Mod+Ctrl+WheelScrollRight      { move-column-right; }
    Mod+Ctrl+WheelScrollLeft       { move-column-left; }

    Mod+WheelScrollDown             { focus-column-right; }
    Mod+WheelScrollUp               { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown  { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp    { move-column-left; }

    Mod+TouchpadScrollUp   allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }
    Mod+TouchpadScrollDown allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    // Mod+TouchpadScrollLeft  { focus-column-left; }
    // Mod+TouchpadScrollRight { focus-column-right; }

    Mod+1       { focus-workspace 1; }
    Mod+2       { focus-workspace 2; }
    Mod+3       { focus-workspace 3; }
    Mod+4       { focus-workspace 4; }
    Mod+5       { focus-workspace 5; }
    Mod+6       { focus-workspace 6; }
    Mod+7       { focus-workspace 7; }
    Mod+8       { focus-workspace 8; }
    Mod+9       { focus-workspace 9; }
    Mod+Ctrl+1  { move-column-to-workspace 1; }
    Mod+Ctrl+2  { move-column-to-workspace 2; }
    Mod+Ctrl+3  { move-column-to-workspace 3; }
    Mod+Ctrl+4  { move-column-to-workspace 4; }
    Mod+Ctrl+5  { move-column-to-workspace 5; }
    Mod+Ctrl+6  { move-column-to-workspace 6; }
    Mod+Ctrl+7  { move-column-to-workspace 7; }
    Mod+Ctrl+8  { move-column-to-workspace 8; }
    Mod+Ctrl+9  { move-column-to-workspace 9; }

    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    Mod+R { switch-preset-column-width; }
    Mod+F repeat=false              { maximize-column; }
    Mod+Shift+F repeat=false        { fullscreen-window; }
    Mod+Shift+Ctrl+F repeat=false   { toggle-windowed-fullscreen; }
    Mod+N { center-column; }

    // Move the focused window between the floating and the tiling layout.
    Mod+V repeat=false { toggle-window-floating; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Ctrl+Minus { set-column-width "-1"; }
    Mod+Ctrl+Equal { set-column-width "+1"; }

    Mod+Shift+Minus      { set-window-height "-10%"; }
    Mod+Shift+Equal      { set-window-height "+10%"; }
    Mod+Shift+Ctrl+Minus { set-window-height "-1"; }
    Mod+Shift+Ctrl+Equal { set-window-height "+1"; }

    Mod+0            { set-column-width "1920"; }
    Mod+Shift+0      { set-column-width "2560"; }
    Mod+ssharp      { expand-column-to-available-width; }

    Mod+Shift+Y { quit; }

    Mod+Shift+Ctrl+T { toggle-debug-tint; }
    Mod+Shift+Ctrl+O { debug-toggle-opaque-regions; }
    Mod+Shift+Ctrl+D { debug-toggle-damage; }
}
